using System;
using Microsoft.VisualBasic;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using MetroFramework.Forms;
using System.Windows.Forms;
using Cabinink.Writer.Cores;
using Cabinink.Writer.Middle;
using app = Cabinink.Program;

namespace Cabinink.Writer.UI
{
   public partial class frmCreateRole : VsSkinFormBase
   {
      public string BuildedName;
      public int NameCategory = 0;

      private Project proj;
      public frmCreateRole()
      {
         InitializeComponent();
      }
      public frmCreateRole(Project _project)
      {
         InitializeComponent();
         proj = _project;
         proj.InitializeProject();
      }
      public Project ActivedProject
      {
         get { return proj; }
      }
      private void btnRandomBuildName_Click(object sender, EventArgs e)
      {
         frmBuildName build = new frmBuildName();
         build.DisplayDialog(this);
         txtName.Text = BuildedName;
      }

      private void btnAdd_Click(object sender, EventArgs e)
      {
         string appell = Interaction.InputBox("请在下面的文本框输入您需要添加的昵称！", "添加昵称", txtName.Text);
         //string appell = VsSkinInputBox.Display("添加昵称");
         if (appell != string.Empty) lstAppellation.Items.Add(appell);
      }

      private void btnRemove_Click(object sender, EventArgs e)
      {
         lstAppellation.Items.RemoveAt(lstAppellation.SelectedIndex);
      }

      private void btnRename_Click(object sender, EventArgs e)
      {
         int selected = lstAppellation.SelectedIndex;
         string appell = Interaction.InputBox("请在下面的文本框输入新的昵称来替换原有选中的昵称！", "重命名昵称", txtName.Text);
         if (appell != string.Empty) lstAppellation.Items.Add(appell);
         lstAppellation.Items.RemoveAt(selected);
      }

      private void btnClear_Click(object sender, EventArgs e)
      {
         lstAppellation.Items.Clear();
      }

      private void frmCreateRole_Load(object sender, EventArgs e)
      {
         cmbCategory.Text = @"路人（不需要太多的描述）";
      }

      private void btnCreate_Click(object sender, EventArgs e)
      {
         string[] name_s = txtName.Text.Split(' ');
         SCompleteName name;
         if (NameCategory == 0) name = new SCompleteName(name_s[0], name_s[1]);
         else name = new SCompleteName(name_s[1], name_s[0]);
         Role role = new Role(name);
         for (int i = 0; i < lstAppellation.Items.Count; i++) role.AddAppellation(lstAppellation.Items[i].ToString());
         if (rdbSexM.Checked) role.Sex = EPeopleSex.Male;
         if (rdbSexW.Checked) role.Sex = EPeopleSex.Famale;
         if (rdbSexN.Checked) role.Sex = EPeopleSex.Asexual;
         role.InitializeAge = Convert.ToUInt32(txtInitializeAge.Text);
         role.Occupation = txtOccupation.Text;
         role.Camp = txtCamp.Text;
         role.Character = txtCharacter.Text;
         role.Appearance = txtAppearance.Text;
         role.OtherInformation = txtOtherInformation.Text;
         role.PetPhrase = txtPetPhrase.Text;
         switch (cmbCategory.Text)
         {
            case "主角（包含男女主角等）":
               role.Category = ERoleCategory.Protagonist;
               break;
            case "配角（包含男女配角等）":
               role.Category = ERoleCategory.Supporting;
               break;
            case "路人（不需要太多的描述）":
               role.Category = ERoleCategory.Passerby;
               break;
            case "反派（与主角或者配角存在瓜葛）":
               role.Category = ERoleCategory.Villain;
               break;
         }
         int before_add_count = ActivedProject.Roles.Count;
         int after_add_count = ActivedProject.Roles.AddRole(role);//添加角色至Project实例的Roles属性中
         if (before_add_count < after_add_count)
         {
            Action ok = delegate { InitializeComponent(); };
            Action cancel = delegate { Close(); };
            VsSkinMessageBoxOkCancel ques = new VsSkinMessageBoxOkCancel("创建角色成功", "已成功创建角色，是否继续创建？", EMessageLevel.Question, ok, cancel);
            ques.Display(this);
         }
         else
         {
            VsSkinMessageBoxOk msg = new VsSkinMessageBoxOk("创建角色失败", "无法创建角色，如果该问题频繁出现，请尝试联系该应用程序的开发者进行解决！", EMessageLevel.Error);
            msg.Display(this);
         }
         ActivedProject.Roles.SaveToDatabase(ActivedProject.Database.SourceUri, true);
         //app.Roles.SaveToDatabase(@"", true);
         //TODO: 在Project类新增roles字段并围绕该字段写一些实例成员在，这是一个至关重要的步骤，否则上面的语句将会使用一些大量附加代码衬托。
         //TODO: 2016年6月10日 02:46:28，上述步骤已完成，代码已修改
         btnCancel_Click(sender, e);
      }

      private void btnCancel_Click(object sender, EventArgs e)
      {
         Close();
      }
   }
}
